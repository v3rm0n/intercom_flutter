# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # job for plugin intercom_flutter
  intercom_flutter:
    runs-on: ubuntu-latest
    env:
      source-directory: ./intercom_flutter

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      with:
        java-version: '12.x'
    - uses: subosito/flutter-action@v1
      with:
        channel: 'stable'
    
    # Download all Flutter packages
    - name: Download dependencies
      run: flutter pub get
      working-directory: ${{env.source-directory}}

    # Check for any formatting issues in the code.
    - name: check code format
      run: dart format --set-exit-if-changed .
      working-directory: ${{env.source-directory}}

    # Run Flutter Analyzer
    - name: Run Flutter Analyzer
      run: flutter analyze
      working-directory: ${{env.source-directory}}

    # Run all unit-tests with code coverage
    - name: Run unit tests
      run: flutter test --coverage
      working-directory: ${{env.source-directory}}

  # job for plugin intercom_flutter_platform_interface
  intercom_flutter_platform_interface:
    runs-on: ubuntu-latest
    env:
      source-directory: ./intercom_flutter_platform_interface

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      with:
        java-version: '12.x'
    - uses: subosito/flutter-action@v1
      with:
        channel: 'stable'
    
    # Download all Flutter packages
    - name: Download dependencies
      run: flutter pub get
      working-directory: ${{env.source-directory}}

    # Check for any formatting issues in the code.
    - name: check code format
      run: dart format --set-exit-if-changed .
      working-directory: ${{env.source-directory}}

    # Run Flutter Analyzer
    - name: Run Flutter Analyzer
      run: flutter analyze
      working-directory: ${{env.source-directory}}

    # Run all unit-tests with code coverage
    - name: Run unit tests
      run: flutter test --coverage
      working-directory: ${{env.source-directory}}

  # job for plugin intercom_flutter_web
  intercom_flutter_web:
    runs-on: ubuntu-latest
    env:
      source-directory: ./intercom_flutter_web/example

    steps:
    - uses: actions/checkout@v2
    
    # install chrome driver
    - name: Install ChromeDriver
      run: |
        CHROMEDRIVER_VERSION=$(google-chrome --version | sed 's/[^0-9.]//g') \
        && curl --silent --show-error --location --fail --retry 3 --output /tmp/chromedriver_linux64.zip "https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/$CHROMEDRIVER_VERSION/linux64/chromedriver-linux64.zip" \
        && cd /tmp \
        && unzip chromedriver_linux64.zip \
        && rm -rf chromedriver_linux64.zip \
        && sudo mv chromedriver-linux64 /usr/local/bin/chromedriver \
        && sudo chmod +x /usr/local/bin/chromedriver \
        && chromedriver --version
      
    - uses: actions/checkout@v2
    - uses: subosito/flutter-action@v1
      with:
        channel: 'master'
    
    # Download all Flutter packages
    - name: Download dependencies
      run: flutter pub get
      working-directory: ${{env.source-directory}}

    # Check for any formatting issues in the code.
    - name: check code format
      run: dart format --set-exit-if-changed .
      working-directory: ${{env.source-directory}}

    # Run Flutter Analyzer
    - name: Run Flutter Analyzer
      run: flutter analyze
      working-directory: ${{env.source-directory}}

    # Run chrome driver
    - name: Run chrome driver
      run: chromedriver --port=4444 &
      working-directory: ${{env.source-directory}}

    # Run all integration tests
    - name: Run integration tests
      run: flutter drive -d web-server --browser-name=chrome --driver=test_driver/integration_test.dart --target=integration_test/intercom_flutter_web_test.dart
      working-directory: ${{env.source-directory}}
